[tox]
envlist = ci
skipsdist = true

[testenv]
basepython = python2.7
envdir = {toxworkdir}/venv
whitelist_externals = sh
passenv =
    HOME
    LANG
    SSH_AUTH_SOCK
    TERM
    USER
    HOMEPATH
    PROGRAMDATA
setenv =
  PYTHONUNBUFFERED = 1

deps =
  -rrequirements.txt
   pre-commit
   ansible-lint

commands =

[testenv:ci]
commands =
    {[testenv:pre-commit]commands}
    {[testenv:ansible-requirements]commands}
    {[testenv:ansible-check]commands}
    {[testenv:ansible-lint]commands}

[testenv:pre-commit]
commands =
  pre-commit install -f --install-hooks

[testenv:ansible-requirements]
commands =
  sh tools/ansible-requirements.sh roles/requirements.yml

[testenv:ansible-check]
commands =
  sh tools/tools-wrapper.sh -n '\.yml$' -x '/\(group_vars\|host_vars\)/' -f tools/ansible-check.sh {posargs:playbooks/actions playbooks/deployments}

[testenv:ansible-lint]
commands =
  sh tools/tools-wrapper.sh -n '\.yml$' -f tools/ansible-lint.sh {posargs:playbooks/}


[testenv:ansible-idempotent]
commands =
  sh tools/tools-wrapper.sh -n '\.yml$' -x '/\(group_vars\|host_vars\)/' -f tools/ansible-idempotent.sh {posargs:-g playbooks/deployments}


[testenv:venv]
basepython = {[testenv]basepython}
envdir = {[testenv]envdir}

deps =
  {[testenv]deps}

commands =
  {[testenv:pre-commit]commands}
  {[testenv:ansible-requirements]commands}
